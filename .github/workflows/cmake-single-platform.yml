# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Windows SDK Action
      uses: GuillaumeFalourd/setup-windows10-sdk-action@v2.2
      with: 
          sdk-version: 22621

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
          python-version: '3.12'
          
    - name: Install python dependencies
      run: |
          cd ${{github.workspace}}/engine/preprocessing/
          pip install -r requirements.txt
          cd ${{github.workspace}}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run:  |
          cmake -S ${{github.workspace}} -B ${{github.workspace}}/build -DCMAKE_SYSTEM_VERSION=10.0.22621.0

    - name: Build
      # Build your program with the given configuration
      run: |
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --resolve-package-references=off

    - name: Test
      working-directory: ${{github.workspace}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --test-dir ${{github.workspace}}/build/engine -V
      

